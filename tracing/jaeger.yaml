apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Service
  metadata:
    name: cassandra
    namespace: tracing
    labels:
      app: jaeger
      name: jaeger-cassandra-service
      jaeger-infra: cassandra-service
  spec:
    ports:
    - port: 7000
      name: intra-node
    - port: 7001
      name: tls-intra-node
    - port: 7199
      name: jmx
    - port: 9042
      name: cql
    - port: 9160
      name: thrift
    clusterIP: None
    selector:
      app: cassandra
- apiVersion: "apps/v1beta1"
  kind: StatefulSet
  metadata:
    name: cassandra
    namespace: tracing
    labels:
      app: jaeger
      jaeger-infra: cassandra-statefulset
  spec:
    serviceName: cassandra
    replicas: 1
    template:
      metadata:
        labels:
          app: cassandra
          jaeger-infra: cassandra-replica
      spec:
        terminationGracePeriodSeconds: 1800
        containers:
        - name: cassandra
          image: cassandra:3.11
          command:
          - /docker-entrypoint.sh
          - "-R"
          ports:
          - containerPort: 7000
            name: intra-node
          - containerPort: 7001
            name: tls-intra-node
          - containerPort: 7199
            name: jmx
          - containerPort: 9042
            name: cql
          - containerPort: 9160
            name: thrift
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "nodetool drain"]
          env:
            - name: MAX_HEAP_SIZE
              value: 512M
            - name: HEAP_NEWSIZE
              value: 100M
            - name: CASSANDRA_LISTEN_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CASSANDRA_CLUSTER_NAME
              value: "jaeger"
            - name: CASSANDRA_DC
              value: "dc1"
            - name: CASSANDRA_RACK
              value: "rack1"
            - name: CASSANDRA_ENDPOINT_SNITCH
              value: "GossipingPropertyFileSnitch"
            - name: CASSANDRA_SEEDS
              value: cassandra-0.cassandra
          volumeMounts:
          - name: cassandra-data
            mountPath: /var/lib/cassandra
          - name: cassandra-logs
            mountPath: /var/log/cassandra
        volumes:
        - name: cassandra-data
          emptyDir: {}
        - name: cassandra-logs
          emptyDir: {}
    volumeClaimTemplates:
    - metadata:
        name: cassandra-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: cassandra-logs
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
- apiVersion: batch/v1
  kind: Job
  metadata:
    name: jaeger-cassandra-schema-job
    namespace: tracing
    labels:
      app: jaeger
      jaeger-infra: cassandra-schema-job
  spec:
    activeDeadlineSeconds: 120
    template:
      metadata:
        name: cassandra-schema
      spec:
        containers:
        - name: jaeger-cassandra-schema
          image: jaegertracing/jaeger-cassandra-schema:0.9
          env:
            - name: MODE
              value: "prod"
            - name: DATACENTER
              value: "dc1"
        restartPolicy: OnFailure
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: jaeger-collector
    namespace: tracing
    labels:
      app: jaeger
      jaeger-infra: collector-deployment
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: jaeger
          jaeger-infra: collector-pod
      spec:
        containers:
        - env:
          - name: COLLECTOR_ZIPKIN_HTTP_PORT
            value: "9411"
          image: jaegertracing/jaeger-collector:0.9
          name: jaeger-collector
          ports:
          - containerPort: 14267
            protocol: TCP
          - containerPort: 14268
            protocol: TCP
          - containerPort: 9411
            protocol: TCP
          command:
          - "/go/bin/collector-linux"
          - "--cassandra.servers=cassandra"
          - "--cassandra.keyspace=jaeger_v1_dc1"
- apiVersion: v1
  kind: Service
  metadata:
    name: jaeger-collector
    namespace: tracing
    labels:
      app: jaeger
      jaeger-infra: collector-service
  spec:
    ports:
    - name: jaeger-collector-tchannel
      port: 14267
      protocol: TCP
      targetPort: 14267
    - name: jaeger-collector-http
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      jaeger-infra: collector-pod
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    name: zipkin
    namespace: tracing
    labels:
      app: jaeger
      jaeger-infra: zipkin-service
  spec:
    ports:
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      jaeger-infra: collector-pod
    type: ClusterIP
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: jaeger-query
    namespace: tracing
    labels:
      app: jaeger
      jaeger-infra: query-deployment
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: jaeger
          jaeger-infra: query-pod
      spec:
        containers:
        - image: jaegertracing/jaeger-query:0.9
          name: jaeger-query
          ports:
          - containerPort: 16686
            protocol: TCP
          command:
          - "/go/bin/query-linux"
          - "--cassandra.servers=cassandra"
          - "--cassandra.keyspace=jaeger_v1_dc1"
          - "--query.static-files=/go/jaeger-ui/"
          readinessProbe:
            httpGet:
              path: "/"
              port: 16686
- apiVersion: v1
  kind: Service
  metadata:
    name: jaeger-query
    namespace: tracing
    labels:
      app: jaeger
      jaeger-infra: query-service
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 16686
    selector:
      jaeger-infra: query-pod
