# credits https://github.com/CommercialTribe/kube-redis

---

apiVersion: v1
kind: Service
metadata:
  name: redis-nodes
  namespace: ci
  labels:
    service: redis
spec:
  clusterIP: None
  ports:
    - port: 6379
      name: redis
  selector:
    name: redis-node

---

apiVersion: v1
kind: Service
metadata:
  name: redis-readonly
  namespace: ci
  labels:
    service: redis
spec:
  ports:
    - port: 6379
      name: redis
  selector:
    name: redis-node
    role: slave

---

apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: ci
  labels:
    service: redis
spec:
  ports:
    - port: 6379
      name: redis
  selector:
    name: redis-node
    role: master

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis
  namespace: ci

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: redis
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "patch", "list"]

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: redis
  namespace: ci
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redis
subjects:
- kind: ServiceAccount
  name: redis
  namespace: ci

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel
  namespace: ci
data:
  # Use the following file for reference http://download.redis.io/redis-stable/redis.conf
  node.conf: |
    protected-mode no
    port 6379
    tcp-backlog 511
    loglevel notice
    logfile ""
    dir /data

---

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: redis
  namespace: ci
spec:
  serviceName: redis-nodes
  replicas: 3
  template:
    metadata:
      labels:
        name: redis-node
    spec:
      serviceAccount: redis
      terminationGracePeriodSeconds: 10
      containers:
        # Redis
        - name: redis-node
          image: redis:3.2
          command:
            - redis-server
          args:
            - /config/node.conf
          ports:
            - name: redis
              containerPort: 6379
          volumeMounts:
            - name: data
              mountPath: /data
            - name: redis-config
              mountPath: /config
          resources:
            requests:
              cpu: 100m
              memory: 1Gi
          livenessProbe: &healthcheck
            exec:
              command: [ "redis-cli", "ping" ]
          readinessProbe:
            <<: *healthcheck

        # Sentinel
        - name: redis-sentinel
          image: redis:3.2
          command: [ "bash", "-c", "touch sentinel.conf && redis-sentinel sentinel.conf" ]
          ports:
            - name: sentinel
              containerPort: 26379
          resources:
            requests:
              cpu: 25m
              memory: 50Mi
          livenessProbe: &healthcheck
            exec:
              command: [ "redis-cli", "-p", "26379", "ping" ]
          readinessProbe:
            <<: *healthcheck

        # Sidecar
        - name: redis-sidecar
          image: commercialtribe/redis-sentinel-sidecar:v20170816.19
          imagePullPolicy: Always
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: pod-info
              mountPath: /etc/pod-info
          readinessProbe:
            exec:
              command: [ "cat", "booted" ]
          resources:
            requests:
              cpu: 25m
              memory: 50Mi

      volumes:
        - name: pod-info
          downwardAPI:
            items:
              - path: labels
                fieldRef:
                  fieldPath: metadata.labels
        - name: redis-config
          configMap:
            name: redis-sentinel
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 20Gi
