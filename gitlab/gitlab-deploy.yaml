---

apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-config
  namespace: ci
data:
  GITLAB_PORT: "80"
  GITLAB_SSH_PORT: "22"
  GITLAB_SECRETS_DB_KEY_BASE: "bd7r99HhcspjxRJTLTjggcMdvwwjFzgLMjNrWRhJnpjHn9tJtVsjF4wXFRP9KrFf"
  GITLAB_SECRETS_SECRET_KEY_BASE: "Mz9J7ghRcn9H49bHcdJpqCWVHCVstp3vRfdstTv7mcL4PMphqwxN3gfxCHfqrTgV"
  GITLAB_SECRETS_OTP_KEY_BASE: "Jm7pqqpqTdrqJPj7svXbh9v94Hsc9nfTNwphxtR9bnkvM94sPjkfg7PxtKFWj9wp"
  GITLAB_ROOT_PASSWORD: "GgIiTtLlAaBb"
  GITLAB_RELATIVE_URL_ROOT: "/ci"
  DB_ADAPTER: "postgresql"
  DB_HOST: "pgpool.ci"
  DB_NAME: "gitlabhq_production"
  DB_USER: "postgres"
  DB_PASS: "PpOoSsTtGgRrEeSs"
  DB_EXTENSION: "pg_trgm"
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-pg-init-config
  namespace: ci
data:
  DB_LOCALE: "de_DE.utf-8"
  DB_HOST: "pgpool"
  DB_SUPERUSER: "postgres"
  DB_SUPERUSER_PASSWORD: "PpOoSsTtGgRrEeSs"
  DB_NAME: "gitlabhq_production"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-pg-init-scripts
  namespace: ci
data:
  1-gitlab-init-db.sh: |
    #!/usr/bin/env bash
    PG_DB_EXISTS=`psql -U ${DB_SUPERUSER} -h ${DB_HOST} -tAc "SELECT EXISTS ( SELECT 1 from pg_database WHERE datname='${DB_NAME}');"`
    if test ${PG_DB_EXISTS} == "f"; then
      psql -U ${DB_SUPERUSER} -h ${DB_HOST} -tAc "CREATE DATABASE ${DB_NAME} WITH TEMPLATE = template0 ';"
    fi
    exit 0
---

apiVersion: v1
kind: Service
metadata:
  name: gitlab
  namespace: ci
  labels:
    app: gitlab
    role: ci
spec:
  ports:
  - port: 80
    name: web
  - port: 22
    name: ssh
  selector:
    app: gitlab

---

apiVersion: v1
kind: Service
metadata:
  name: gitlab-intern
  namespace: ci
  labels:
    app: gitlab
    role: ci
spec:
  ports:
  - port: 80
    name: web
  - port: 22
    name: ssh
  clusterIP: None
  selector:
    app: gitlab

---

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: gitlab
  namespace: ci
  labels:
    app: gitlab
spec:
  serviceName: gitlab-intern
  replicas: 1
  template:
    metadata:
      labels:
        app: gitlab
        role: ci
    spec:
      initContainers:
        - name: gitlab-postgres-init
          image: quay.io/containerbootcamp/postgres-init
          envFrom:
          - configMapRef:
              name: gitlab-pg-init-config
          volumeMounts:
          - name: gitlab-init-scripts
            mountPath: /pg-init
      containers:
      - name: gitlab
        image: sameersbn/gitlab:10.2.2
        envFrom:
        - configMapRef:
            name: gitlab-config
        ports:
        - containerPort: 80
          protocol: TCP
        - containerPort: 22
          protocol: TCP
        volumeMounts:
        - mountPath: /home/git/data
          name: gitlab-data
      volumes:
      - name: gitlab-init-scripts
        configMap:
          name: gitlab-pg-init-scripts
  volumeClaimTemplates:
  - metadata:
      name: gitlab-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi

---

#####
# ingress to gitlab, test f.e. with
# curl http://bootcamp.ch.innoq.io/ci
#####

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/auth-type: basic
    ingress.kubernetes.io/auth-secret: basic-auth
    ingress.kubernetes.io/auth-realm: "Authentication Required"
  name: gitlab
  namespace: ci
spec:
  rules:
  - host: bootcamp.ch.innoq.io
    http:
      paths:
      - path: /ci
        backend:
          serviceName: gitlab
          servicePort: 80