---

apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: infrastruktur
  labels:
    app: mongo
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    app: mongo

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongo
  namespace: infrastruktur

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: mongo
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: mongo
  namespace: infrastruktur
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mongo
subjects:
- kind: ServiceAccount
  name: mongo
  namespace: infrastruktur

---

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongo
  namespace: infrastruktur
spec:
  serviceName: "mongo"
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
        role: data
    spec:
      serviceAccount: mongo
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo
          resources:
            limits:
              memory: "1Gi"
          command:
            - mongod
            - --master
            - --wiredTigerCacheSizeGB 
            - "0.5"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=mongo,environment=test"
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
